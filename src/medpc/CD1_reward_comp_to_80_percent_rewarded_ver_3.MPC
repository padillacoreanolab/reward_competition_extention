\INPUTS

^port = 8


\OUTPUTS
^whitenoise = 1
^tone1 = 2
^tone2 = 3
^pump = 9
^fan = 16
^toneled = 17
^peled = 18



\ARRAYS

DIM P = 20000 \Port entry time stamp array

DIM Q = 250 \US delivery time stamp array (absolute)

DIM R = 250 \US time stamp array (relative to last CS)

DIM W = 2500 \ITI values used for CS

DIM S = 2500 \CS presentation values (absolute - every time yellow light turns on)

DIM N = 20000 \Port exit time stamp array

DIM K = 250 \CS type

DIM G = 250 \controlled_stimulus_seconds computer clock time (seconds on clock every time yellow light/tone turns on)

DIM H = 250 \controlled_stimulus_minutes computer clock time (minutes on clock every time yellow light/tone turns on)

DIM I = 250 \controlled_stimulus_hours computer clock time (hours every time yellow light/tone turns on)

DIM B = 6000 \port_entry_seconds computer clock time (seconds on clock every time red light turns on)

DIM F = 6000 \port_entry_minutes computer clock time (minutes on clock every time red light turns on)

DIM J = 6000 \port_entry_hours computer clock time (hours every time red light turns on)



\Original List of ITIs

LIST V = 100", 60", 50", 75", 70", 60", 85", 65", 65", 50", 60", 50", 55", 100", 70", 55", 75", 65", 55", 85", 300", 50", 55", 50", 75", 85", 115", 50", 50", 65", 60", 110", 65", 55", 75", 50", 55", 50", 70", 110", 55", 1000"

\ Boolean of whether reward is given
\ Omission trials on trial 23, 27, 34, 37

LIST O = 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1

\Counter and Flag array
DIM C = 6

\are all 1-indexed i.e. 3 port entries means 3 port entries

\C(0) counter for number of port entries

\C(1) counter for CS presentation number

\C(2) counter for US delivery

\C(3) flag to indicate if sucrose is in port =0 if no port entry was made, =1 if port entry was made (i.e., no sucrose)

\C(4) counter for number of port exits

\C(5) number of CS1 (tones)

\C(6) number of sucrose deliveries



\Z-pulses

\Z1: start task after initial delay

\Z2: start of CS

\Z3: port entry

\Z4: port exit

\Z5: trigger CS1

\Z6: turn off CS1 triggers



\Variables

\A - Time since last CS

\B -

\C - Counter array

\D - Current ITI value

\E - CS ITI values for first few trials

\F -

\G -

\H -

\I -

\J -

\K - CS type

\L -

\M - CS type repo

\N - Port exit time stamp array

\O -

\P - Port entry time stamp array

\Q - Sucrose delivery time stamp array (absolute)

\R - Sucrose delivery time stamp array (relative to last CS)

\S - CS presentation time stamp array

\T - Session timer

\U - Time since last CS presentation

\V - List of CS ITI values (tone + toneled)

\W - ITI values used for CS one each trial

\X - Current reward or not value (0 or 1)

\Y - Beam break monitor variable

\Z -





DISKVARS = A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z

DISKCOLUMNS = 1



\Detect port entry

S.S.1,

S1,

\\ C(3) flag to indicate if sucrose is in port

\\ C(3) = 0 if no port entry was made

\\ C(3) = 1 if port entry was made (i.e., no sucrose)

    #start: SET C(3) = 1; Z1 ---> S2



\Make sure INPUT IS SET TO LEVEL MODE

S2,

\\ #R^port is checking the input of the port

\\ Y - Beam break monitor variable

\\ TODO: Figure out Y needs to be greater than 2

    #R^port: ADD Y; IF Y >= 2 [@BeamBreak, @NoBeamBreak]
                 @BeamBreak: off^peled; Z3; SET Y = 0 ---> S3
                 @NoBeamBreak: ---> SX
    0.02": on^peled; SET Y = 0 ---> S2
S3,
    0.02": Z4 ---> S2
    #R^port: ---> S3





\After port entry

S.S.2,

S1,

    #Z3: SET B(C(0)) = CURRENTSECONDS; SET F(C(0)) = CURRENTMINUTES; SET J(C(0)) = CURRENTHOURS; SET P(C(0)) = T; SHOW 6, LastPortEntry, P(C(0)); ADD C(0); SET P(C(0)) = -987.987; SET C(3) = 1; SHOW 7, TotalPortEntries, C(0) ---> S1



\After port exit

S.S.3,

S1,

    #Z4: SET N(C(4)) = T; SHOW 1, LastPortExit, N(C(4)); ADD C(4); SET N(C(4)) = -987.987; SHOW 2, TotalPortExits, C(4) ---> S1





\Calculate ITI for CS presentation

S.S.5,

S1,

    #Z1: ---> S2

\Initial delay

S2,

    60":  ---> S3

S3,
\\\
  D#T:  SET K(C(1)) = 1; SET D = V(C(1)); SET X = O(C(1)); ADD C(1); SHOW 10, Current ITI, D; Z2 ---> S3

\ Turn on CS stimulus and recording time on the computer

S.S.6,

S1,

\ Uncomment line of code below for competiton(30 minutes)

   \ #Z2: IF T >= 1800 [@overtime, @undertime]

\ Uncomment line of code below for training(60 minutes)

    #Z2: IF T >= 3600 [@overtime, @undertime]

        @overtime: ---> SX

        @undertime: ---> S2

S2,

    0.0001": SHOW 3, CSNumber, C(1); SET S(C(1) - 1) = T; SET G(C(1) - 1) = CURRENTSECONDS; SET H(C(1) - 1) = CURRENTMINUTES; SET I(C(1) - 1) = CURRENTHOURS; SET S(C(1)) = -987.987; SHOW 4, CSpresentationSeconds, G(C(1) - 1);

                IF K(C(1)-1) = 1 [@cs1, @ncs1]
\ Todo: Add this or not
                    @cs1: off^toneled; ADD C(5); SHOW 8, nCS1, C(5); Z5 ---> S3
                    @ncs1: ---> SX


S3,

    10": Z6; ---> S1



\Deliver US

S.S.7,

S1,

    #Z2:  IF C(3) = 1 [@portEntered, @portNotEntered]

                 @portEntered: SET C(3) = 0 ---> S2      \sucrose

                 @portNotEntered: ---> S1



S2,

    4":  IF X = 1 [@yesRewarded, @noRewarded]

                 @yesRewarded: on^pump; SET Q(C(2)) = T; SET R(C(2)) = (T - U)*100; SHOW 12, USLatency, R(C(2)); ADD C(2); SET Q(C(2)) = -987.987; SET R(C(2) + 1) = -987.987; ADD C(6); SHOW 11, NumSucroseDeliveries, C(6)  ---> S3

                 @noRewarded: ---> S1

\ Reset "port entered" flag,

S3,

    \ Uncomment for C57s

    \0.5": off^pump ---> S1

    \ Uncomment for CD1s

    1": off^pump ---> S1



S.S.8,   \CS1

S1,

    #Z5: on^tone1; on^tone2 ---> S1



S.S.11,

S1,

    #Z6: off^tone1; off^tone2; on^toneled ---> S1



\ Session timer

S.S.12,

S1,

    #start: SET T = 0 ---> S2

S2,

    0.01": SET T = T + 0.01 ---> S2



\ Stop session after however many minutes

S.S.13,

S1,

    #start: on^toneled; on^peled; on^whitenoise; ---> S2

S2,

    \\\ Uncomment for Reward Training

    \ 61': off^whitenoise---> stopabortflush \when time is up, store data and turn off everything.

    \\\ Uncomment for Reward Competition

    61': off^whitenoise; ---> stopabortflush \when time is up, store data and turn off everything.



\ On Screen clock

S.S.14,

S1,

    #start: on^fan ---> S2

S2,

    1": SHOW 5, Clock, T; SET A = (T - U)*100; SHOW 9, TimeFromLastCS, A ---> SX



\ Keep time since the start of CS presentation

S.S.15,

S1,

    #Z2: SET U = T ---> S1
